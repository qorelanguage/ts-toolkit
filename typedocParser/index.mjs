import mod from "./index.js";

export default mod;
export const ArrayTypeParser = mod.ArrayTypeParser;
export const ClassConstructorParser = mod.ClassConstructorParser;
export const ClassMethodParser = mod.ClassMethodParser;
export const ClassParser = mod.ClassParser;
export const ClassPropertyParser = mod.ClassPropertyParser;
export const CommentParser = mod.CommentParser;
export const ConditionalTypeParser = mod.ConditionalTypeParser;
export const EnumMemberParser = mod.EnumMemberParser;
export const EnumParser = mod.EnumParser;
export const FunctionParser = mod.FunctionParser;
export const IndexedAccessTypeParser = mod.IndexedAccessTypeParser;
export const InferredTypeParser = mod.InferredTypeParser;
export const InterfaceMethodParser = mod.InterfaceMethodParser;
export const InterfaceParser = mod.InterfaceParser;
export const InterfacePropertyParser = mod.InterfacePropertyParser;
export const IntersectionTypeParser = mod.IntersectionTypeParser;
export const IntrinsicTypeParser = mod.IntrinsicTypeParser;
export const LiteralTypeParser = mod.LiteralTypeParser;
export const MappedTypeParser = mod.MappedTypeParser;
export const NamedTupleMemberTypeParser = mod.NamedTupleMemberTypeParser;
export const NamespaceParser = mod.NamespaceParser;
export const OptionalTypeParser = mod.OptionalTypeParser;
export const ParameterParser = mod.ParameterParser;
export const PredicateTypeParser = mod.PredicateTypeParser;
export const ProjectParser = mod.ProjectParser;
export const QueryTypeParser = mod.QueryTypeParser;
export const ReferenceTypeParser = mod.ReferenceTypeParser;
export const ReflectionKind = mod.ReflectionKind;
export const ReflectionTypeParser = mod.ReflectionTypeParser;
export const RestTypeParser = mod.RestTypeParser;
export const SignatureParser = mod.SignatureParser;
export const SourceParser = mod.SourceParser;
export const TemplateLiteralTypeParser = mod.TemplateLiteralTypeParser;
export const TupleTypeParser = mod.TupleTypeParser;
export const TypeAliasParser = mod.TypeAliasParser;
export const TypeOperatorTypeParser = mod.TypeOperatorTypeParser;
export const TypeParameterParser = mod.TypeParameterParser;
export const TypeParser = mod.TypeParser;
export const UnionTypeParser = mod.UnionTypeParser;
export const UnknownTypeParser = mod.UnknownTypeParser;
export const VariableParser = mod.VariableParser;
