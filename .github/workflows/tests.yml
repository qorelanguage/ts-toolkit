# This is a basic workflow to help you get started with Actions

name: Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  pull_request:
    branches:
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup git user
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Installing modules
        id: install_modules
        run: |
          rm -rf node_modules
          npm install
      - name: Save release version to outputs
        id: save_release_version
        run: echo ::set-output name=version::$(node -pe "require('./pullRequestRelease.json').version")
      - name: 'Create env file'
        run: |
          touch .env
          echo ENDPOINT=${{ secrets.ENDPOINT }} >> .env
          echo TESTUSER=${{ secrets.TESTUSER }} >> .env
          echo TESTPASS=${{ secrets.TESTPASS }} >> .env
          cat .env
      - name: Running tests
        id: tests
        run: npm run test -- -u
      - name: Build test
        id: build_test
        run: npm run build:test
      - name: Change npm version
        id: change_npm_version
        run: npm version ${{ steps.save_release_version.outputs.version }}
      - name: Publish to NPM
        id: npm_publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: pull_request_${{ steps.save_release_version.outputs.version }}
          access: public
      - name: Slack notification
        uses: Foxhoundn/slack@v1.2.94
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: Qorus Toolkit
